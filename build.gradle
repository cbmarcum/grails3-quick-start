import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
	ext {
		grailsVersion = project.grailsVersion
		quickStartVersion = "2.3.0-SNAPSHOT";
	}
	repositories {
		mavenLocal()
		maven { url "https://repo.grails.org/grails/core" }
		maven { url "https://repo.grails.org/grails/plugins" }
		mavenCentral()
		maven { url "https://repo.spring.io/plugins-snapshot" }
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsVersion"
		classpath "io.spring.gradle:dependency-management-plugin:0.6.0.BUILD-SNAPSHOT"
		classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.4"
	}
}

version project.quickStartVersion
group "grails3.quick.start"

apply plugin: "org.grails.grails-web"
apply plugin: "eclipse"
apply plugin: "war"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
	grailsVersion = project.grailsVersion
	quickStartVersion = project.quickStartVersion
}

repositories {
	mavenLocal()
	maven { url "https://repo.grails.org/grails/core" }
	maven { url "https://repo.grails.org/grails/plugins" }
	mavenCentral()
	maven { url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases" }
	maven { url  "http://idcapture.bintray.com/plugins" }
}

dependencyManagement {
	imports { mavenBom "org.grails:grails-bom:$grailsVersion" }
	applyMavenExclusions false
}

dependencies {

	compile "org.springframework.boot:spring-boot-autoconfigure"
	compile("org.grails:grails-core")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile 'org.grails.plugins:cache'
	compile("org.grails:grails-dependencies")
	compile "org.grails:grails-web-boot"	

	compile "org.grails.plugins:cors:1.1.6"
	compile 'org.grails.plugins:mail:2.0.0.RC6'
	runtime "org.grails.plugins:remote-pagination:0.3"
	console "org.grails:grails-console"
	compile 'org.grails:grails-logging'
	runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.4"
	
    compile "org.grails.plugins:hibernate5:${project.gormVersion}"
	compile "org.hibernate:hibernate-core:5.2.10.Final"
	compile "org.hibernate:hibernate-ehcache:5.2.10.Final"
	compile "org.grails.plugins:hibernate-search:2.3.0-SNAPSHOT"

	compile 'org.apache.tomcat:tomcat-jdbc'
	compile("mysql:mysql-connector-java:5.1.18")
	compile("dom4j:dom4j:1.6.1") {
		exclude group: 'xml-apis', module: 'xml-apis'
	}
	compile("commons-fileupload:commons-fileupload:1.3.2")

	profile "org.grails.profiles:web"
	testCompile "org.grails:grails-test-mixins"
}

// Windows' long path problem
grails {  pathingJar = true  }

processResources {
	exclude('**/node_modules/**')
	exclude('**/src/main/resources/public/**')
	exclude('**/target/**')
}

bootRun {
	systemProperties System.getProperties()
	jvmArgs(
		['-Dfile.encoding=UTF-8', '-ea', '-Xms512m', '-Xmx4096m']+ (System.getProperty("debug") != null ? ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=10999']: [])
	)

	addResources = true
}

eclipse {
	project { name = 'grails3-quick-start' }

	classpath {
		defaultOutputDir = file('target')

		downloadSources = true
		downloadJavadoc = true

		file {
			whenMerged { classpath ->

				// optim: exclude resources from eclipse build path to avoid compilation to hang forever
				classpath.entries.removeAll { entry ->
					entry.path == 'src/main/resources'
				}
			}
		}
	}
}

task dumpDependencies {
    doLast {
        configurations.compile.each { println it }
    }
}

